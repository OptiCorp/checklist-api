// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Context;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ModelContextBase))]
    [Migration("20240131085245_initCreate")]
    partial class initCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MobDeMob.Domain.Entities.Checklist", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChecklistTemplateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("Created")
                        .HasColumnType("date");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistTemplateId");

                    b.HasIndex("ItemId");

                    b.HasIndex("MobilizationId");

                    b.ToTable("Checklists");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ChecklistChecklistItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChecklistId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChecklistItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistId");

                    b.HasIndex("ChecklistItemId");

                    b.ToTable("ChecklistChecklistItem");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ChecklistItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("Created")
                        .HasColumnType("date");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ChecklistItems");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ChecklistTemplate", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("Created")
                        .HasColumnType("date");

                    b.Property<string>("ItemTemplateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ItemTemplateId")
                        .IsUnique();

                    b.ToTable("ChecklistTemplates");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ChecklistTemplateChecklistItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChecklistItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChecklistTemplateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistItemId");

                    b.HasIndex("ChecklistTemplateId");

                    b.ToTable("ChecklistTemplateChecklistItem");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.Item", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateOnly>("Created")
                        .HasColumnType("date");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTemplateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly?>("LastModified")
                        .HasColumnType("date");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WpId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemTemplateId");

                    b.HasIndex("ParentId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ItemMobilization", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("MobilizationId");

                    b.ToTable("ItemMobilization");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ItemTemplate", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("Created")
                        .HasColumnType("date");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("LastModified")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Revision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("ItemTemplates");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.Mobilization", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("Created")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MobilizationType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mobilizations");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.Punch", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChecklistChecklistItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChecklistId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("Created")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistId");

                    b.HasIndex("ItemId");

                    b.ToTable("Punches");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AzureAdUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Created")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("LastModified")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UmId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.Checklist", b =>
                {
                    b.HasOne("MobDeMob.Domain.Entities.ChecklistTemplate", "ChecklistTemplate")
                        .WithMany()
                        .HasForeignKey("ChecklistTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobDeMob.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MobDeMob.Domain.Entities.Mobilization", "Mobilization")
                        .WithMany()
                        .HasForeignKey("MobilizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistTemplate");

                    b.Navigation("Item");

                    b.Navigation("Mobilization");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ChecklistChecklistItem", b =>
                {
                    b.HasOne("MobDeMob.Domain.Entities.Checklist", "Checklist")
                        .WithMany("ChecklistChecklistItems")
                        .HasForeignKey("ChecklistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobDeMob.Domain.Entities.ChecklistItem", "ChecklistItem")
                        .WithMany()
                        .HasForeignKey("ChecklistItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Checklist");

                    b.Navigation("ChecklistItem");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ChecklistTemplate", b =>
                {
                    b.HasOne("MobDeMob.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithOne("ChecklistTemplate")
                        .HasForeignKey("MobDeMob.Domain.Entities.ChecklistTemplate", "ItemTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemTemplate");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ChecklistTemplateChecklistItem", b =>
                {
                    b.HasOne("MobDeMob.Domain.Entities.ChecklistItem", "ChecklistItem")
                        .WithMany("ChecklistTemplateChecklistItems")
                        .HasForeignKey("ChecklistItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobDeMob.Domain.Entities.ChecklistTemplate", "ChecklistTemplate")
                        .WithMany("ChecklistTemplateChecklistItems")
                        .HasForeignKey("ChecklistTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistItem");

                    b.Navigation("ChecklistTemplate");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.Item", b =>
                {
                    b.HasOne("MobDeMob.Domain.Entities.ItemTemplate", "ItemTemplate")
                        .WithMany()
                        .HasForeignKey("ItemTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobDeMob.Domain.Entities.Item", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemTemplate");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ItemMobilization", b =>
                {
                    b.HasOne("MobDeMob.Domain.Entities.Item", "Item")
                        .WithMany("ItemMobilizations")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MobDeMob.Domain.Entities.Mobilization", "Mobilization")
                        .WithMany("ItemMobilizations")
                        .HasForeignKey("MobilizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Mobilization");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ItemTemplate", b =>
                {
                    b.HasOne("MobDeMob.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.Punch", b =>
                {
                    b.HasOne("MobDeMob.Domain.Entities.Checklist", "Checklist")
                        .WithMany("Punch")
                        .HasForeignKey("ChecklistId");

                    b.HasOne("MobDeMob.Domain.Entities.Item", "Item")
                        .WithMany("Punches")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Checklist");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.Checklist", b =>
                {
                    b.Navigation("ChecklistChecklistItems");

                    b.Navigation("Punch");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ChecklistItem", b =>
                {
                    b.Navigation("ChecklistTemplateChecklistItems");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ChecklistTemplate", b =>
                {
                    b.Navigation("ChecklistTemplateChecklistItems");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.Item", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("ItemMobilizations");

                    b.Navigation("Punches");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.ItemTemplate", b =>
                {
                    b.Navigation("ChecklistTemplate");
                });

            modelBuilder.Entity("MobDeMob.Domain.Entities.Mobilization", b =>
                {
                    b.Navigation("ItemMobilizations");
                });
#pragma warning restore 612, 618
        }
    }
}
